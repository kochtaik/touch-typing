/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/facade.js":
/*!**************************!*\
  !*** ./src/js/facade.js ***!
  \**************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyboard */ \"./src/js/keyboard.js\");\n/* harmony import */ var _text_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./text-data */ \"./src/js/text-data.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game */ \"./src/js/game.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* eslint-disable no-alert */\n\n/* eslint-disable no-console */\n\n\n\n\nvar Facade = /*#__PURE__*/function () {\n  function Facade(lang) {\n    var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n\n    _classCallCheck(this, Facade);\n\n    this.lang = lang;\n    this.mode = mode;\n    this.elements = {\n      modeList: document.querySelector('#mode'),\n      startBtn: document.querySelector('#start'),\n      languageList: document.querySelector('#language'),\n      inputField: document.querySelector('#textinput')\n    };\n  }\n\n  _createClass(Facade, [{\n    key: \"init\",\n    value: function init() {\n      var lang = this.lang;\n      var generator = new _text_data__WEBPACK_IMPORTED_MODULE_1__.default(lang);\n      generator.pullText();\n      var keyboard = new _keyboard__WEBPACK_IMPORTED_MODULE_0__.default(lang);\n      keyboard.init();\n      this.launchPrestartCountdown();\n    }\n  }, {\n    key: \"launchPrestartCountdown\",\n    value: function launchPrestartCountdown() {\n      var _this = this;\n\n      var counter = 3;\n      var intervalId = setInterval(function () {\n        if (counter === 0) {\n          var text = document.querySelector('#text').textContent;\n          var game = new _game__WEBPACK_IMPORTED_MODULE_2__.default(text, _this.lang, _this.mode);\n          game.start();\n          clearInterval(intervalId);\n        }\n\n        counter -= 1;\n      }, 1000);\n    }\n  }, {\n    key: \"configureInterface\",\n    value: function configureInterface() {\n      var _this$elements = this.elements,\n          startBtn = _this$elements.startBtn,\n          languageList = _this$elements.languageList,\n          modeList = _this$elements.modeList;\n      startBtn.addEventListener('click', function () {\n        var selectedIndex = languageList.options.selectedIndex;\n        var selectedLanguage = languageList.options[selectedIndex].value;\n        selectedIndex = modeList.options.selectedIndex;\n        var selectedMode = modeList.options[selectedIndex].value;\n        if (selectedLanguage === '') alert('Select language!');else {\n          var facade = new Facade(selectedLanguage, selectedMode);\n          facade.init();\n        }\n      });\n    }\n  }]);\n\n  return Facade;\n}();\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var facade = new Facade('en');\n  facade.configureInterface();\n});\n\n//# sourceURL=webpack://touch-typing/./src/js/facade.js?");

/***/ }),

/***/ "./src/js/game.js":
/*!************************!*\
  !*** ./src/js/game.js ***!
  \************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyboard */ \"./src/js/keyboard.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// добавить блокировку всяких дейсвтий, если произошла ошибка в фетчинге\n// исправить баг с отображением ошибок после точного режима\n\n/* eslint-disable no-console */\n\n\nvar Game = /*#__PURE__*/function () {\n  function Game(text, lang, mode) {\n    _classCallCheck(this, Game);\n\n    this.text = text.trim().split(\"\\xA0\");\n    this.lang = lang;\n    this.mode = mode;\n    this.mistakes = {\n      total: 0,\n      corrected: 0\n    };\n    this.speed = 0;\n    this.time = 0;\n    this.wordInputIndex = 0;\n    this.charInputIndex = 0;\n    this.inputLength = 0;\n    this.gameStatus = 'active';\n    this.start = this.start.bind(this);\n    this.handleBackspace = this.handleBackspace.bind(this);\n    this.handleKeypress = this.handleKeypress.bind(this);\n    this.hideBlackout = this.hideBlackout.bind(this);\n    this.elements = {\n      modal: document.querySelector('#end-game'),\n      blackout: document.querySelector('#blackout'),\n      startBtn: document.querySelector('#start'),\n      textElem: document.querySelector('#text'),\n      speed: document.querySelector('#speed'),\n      time: document.querySelector('#time'),\n      mistakes: document.querySelector('#mistakes')\n    };\n  }\n\n  _createClass(Game, [{\n    key: \"start\",\n    value: function start() {\n      this.startCountdown();\n      var _this$elements = this.elements,\n          startBtn = _this$elements.startBtn,\n          textElem = _this$elements.textElem;\n      startBtn.disabled = true;\n\n      if (this.mode === 'exact') {\n        var textLength = textElem.textContent.length;\n        this.allowedMistakesNum = Math.ceil(textLength / 100);\n        this.setMistakesDisplaying();\n      }\n\n      document.addEventListener('keypress', this.handleKeypress);\n      document.addEventListener('keydown', this.handleBackspace);\n      this.createCaretElem();\n    }\n  }, {\n    key: \"handleKeypress\",\n    value: function handleKeypress(e) {\n      e.preventDefault();\n      var enteredChar = e.key;\n      this.validateInput(enteredChar);\n      this.watchGameStatus();\n    }\n  }, {\n    key: \"handleBackspace\",\n    value: function handleBackspace(e) {\n      if (e.key !== 'Backspace') return;\n      var backspace = e.key;\n      this.validateInput(backspace);\n    }\n  }, {\n    key: \"startCountdown\",\n    value: function startCountdown() {\n      var _this = this;\n\n      var addZero = function addZero(value) {\n        return value < 10 ? \"0\".concat(value) : value;\n      };\n\n      var start = Date.now();\n      var timerId = setInterval(function () {\n        var secondsPassed = addZero(Math.floor((Date.now() - start) / 1000) % 60);\n        var minutesPassed = addZero(Math.floor((Date.now() - start) / 60000) % 60);\n\n        var currentSpeed = _this.countSpeed();\n\n        _this.time = Date.now() - start;\n        _this.speed = currentSpeed;\n        _this.elements.time.textContent = \"\".concat(minutesPassed, \":\").concat(secondsPassed);\n        _this.elements.speed.textContent = \"\".concat(currentSpeed, \" CPM\");\n      }, 1000);\n      var timerWatcher = setInterval(function () {\n        if (_this.gameStatus === 'completed' || _this.gameStatus === 'failed') {\n          clearInterval(timerId);\n          clearInterval(timerWatcher);\n        }\n      }, 1);\n    }\n  }, {\n    key: \"watchGameStatus\",\n    value: function watchGameStatus() {\n      if (this.isGameOver()) {\n        this.endGame();\n      }\n    }\n  }, {\n    key: \"getCurrentChar\",\n    value: function getCurrentChar() {\n      var inputIndex = this.inputIndex,\n          text = this.text;\n      return text[inputIndex];\n    }\n  }, {\n    key: \"validateInput\",\n    value: function validateInput(enteredChar) {\n      if (enteredChar === 'Backspace' && this.wordInputIndex === 0 && this.charInputIndex === 0) return;\n      var wordElement = document.querySelector(\"#word\".concat(this.wordInputIndex));\n      if (wordElement == null) return;\n      var wordToCompare = wordElement.textContent;\n      var charToCompare = wordToCompare[this.charInputIndex];\n\n      if (enteredChar === 'Backspace') {\n        this.changeIndexes('decrement');\n        this.removeHighlight();\n      } else if (Game.isMistake(enteredChar, charToCompare)) {\n        this.updateTextElem(false);\n        this.changeIndexes('increment');\n        this.updateMistakes(false);\n      } else if (Game.isCorrect(enteredChar, charToCompare)) {\n        this.updateTextElem(true);\n        this.changeIndexes('increment');\n      }\n\n      this.scrollText();\n      this.moveCaret();\n    }\n  }, {\n    key: \"updateTextElem\",\n    value: function updateTextElem(isCorrect) {\n      var charInputIndex = this.charInputIndex;\n      if (charInputIndex > 0) _keyboard__WEBPACK_IMPORTED_MODULE_0__.default.unhighlightKey();\n      this.highlightChar(charInputIndex, isCorrect);\n    }\n  }, {\n    key: \"highlightChar\",\n    value: function highlightChar(index, isCorrect) {\n      var _char = document.querySelector(\"#word\".concat(this.wordInputIndex, \" > span:nth-child(\").concat(index + 1, \")\"));\n\n      if (_char === null) return;\n\n      if (isCorrect) {\n        _char.classList.add('word__char--char-correct');\n      } else {\n        _char.classList.add('word__char--char-mistaked');\n      }\n    }\n  }, {\n    key: \"removeHighlight\",\n    value: function removeHighlight() {\n      var wordInputIndex = this.wordInputIndex,\n          charInputIndex = this.charInputIndex;\n\n      var _char2 = document.querySelector(\"#word\".concat(wordInputIndex, \" > span:nth-child(\").concat(charInputIndex + 1, \")\"));\n\n      if (_char2 === null) return;\n\n      if (_char2.classList.contains('word__char--char-correct')) {\n        _char2.classList.remove('word__char--char-correct');\n      } else {\n        _char2.classList.remove('word__char--char-mistaked');\n\n        this.updateMistakes(true);\n      }\n    }\n  }, {\n    key: \"changeIndexes\",\n    value: function changeIndexes(direction) {\n      var wordToCompare = document.querySelector(\"#word\".concat(this.wordInputIndex)).textContent;\n      var charToCompare = wordToCompare[this.charInputIndex]; // console.log('char before:', this.charInputIndex);\n      // console.log('word before:', this.wordInputIndex);\n\n      if (charToCompare === wordToCompare[wordToCompare.length - 1]) {\n        if (direction === 'increment') {\n          this.wordInputIndex += 1;\n          this.charInputIndex = 0;\n          this.inputLength += 1;\n        } else {\n          this.charInputIndex -= 1;\n          this.inputLength -= 1;\n        }\n      } else if (direction === 'increment') {\n        this.charInputIndex += 1;\n        this.inputLength += 1;\n      } else if (this.charInputIndex === 0) {\n        if (direction === 'decrement') {\n          this.wordInputIndex -= 1;\n          this.inputLength -= 1;\n          wordToCompare = document.querySelector(\"#word\".concat(this.wordInputIndex)).textContent;\n          this.charInputIndex = wordToCompare.length - 1;\n        } else this.charInputIndex += 1;\n      } else if (direction === 'decrement') {\n        this.charInputIndex -= 1;\n        this.inputLength -= 1;\n      }\n\n      console.log('char after:', this.charInputIndex);\n      console.log('word after:', this.wordInputIndex);\n    }\n  }, {\n    key: \"scrollText\",\n    value: function scrollText() {\n      var word = document.querySelector(\"#word\".concat(this.wordInputIndex));\n      if (word == null) return;\n      word.scrollIntoView();\n    }\n  }, {\n    key: \"createCaretElem\",\n    value: function createCaretElem() {\n      var textElem = this.elements.textElem;\n      var caret = document.createElement('span');\n      caret.classList.add('caret');\n      caret.id = 'caret';\n      this.elements.caret = caret;\n      textElem.insertAdjacentElement('afterbegin', caret);\n    }\n  }, {\n    key: \"moveCaret\",\n    value: function moveCaret() {\n      var charInputIndex = this.charInputIndex,\n          wordInputIndex = this.wordInputIndex;\n      var caret = this.elements.caret;\n      var сurrentChar = document.querySelector(\"#word\".concat(wordInputIndex, \" > span:nth-child(\").concat(charInputIndex + 1, \")\"));\n\n      if (сurrentChar == null) {\n        var currentWord = document.querySelector(\"#word\".concat(wordInputIndex - 1));\n        сurrentChar = currentWord.lastChild;\n\n        var _urrentChar$getBound = сurrentChar.getBoundingClientRect(),\n            x = _urrentChar$getBound.x,\n            width = _urrentChar$getBound.width;\n\n        caret.style.left = \"\".concat(x + width, \"px\");\n      } else {\n        var _urrentChar$getBound2 = сurrentChar.getBoundingClientRect(),\n            _x = _urrentChar$getBound2.x,\n            y = _urrentChar$getBound2.y;\n\n        caret.style.left = \"\".concat(_x, \"px\");\n        caret.style.top = \"\".concat(y, \"px\");\n      }\n    }\n  }, {\n    key: \"countSpeed\",\n    value: function countSpeed() {\n      var inputLength = this.inputLength,\n          time = this.time;\n      var minutes = Math.floor(time) / 60000;\n      return Math.round(inputLength / minutes);\n    }\n  }, {\n    key: \"updateMistakes\",\n    value: function updateMistakes(corrected) {\n      if (corrected) {\n        this.mistakes.corrected += 1;\n      } else this.mistakes.total += 1;\n\n      var mistakes = this.elements.mistakes;\n      mistakes.textContent = this.mistakes.total;\n    }\n  }, {\n    key: \"isGameOver\",\n    value: function isGameOver() {\n      var textElem = this.elements.textElem;\n\n      if (this.mode === 'exact') {\n        if (this.mistakes.total === this.allowedMistakesNum) {\n          this.gameStatus = 'failed';\n          return true;\n        }\n\n        if (this.inputLength === textElem.textContent.length) {\n          this.gameStatus = 'completed';\n          return true;\n        }\n      }\n\n      if (this.inputLength === textElem.textContent.length) {\n        this.gameStatus = 'completed';\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"endGame\",\n    value: function endGame() {\n      var _this$elements2 = this.elements,\n          modal = _this$elements2.modal,\n          startBtn = _this$elements2.startBtn,\n          blackout = _this$elements2.blackout;\n      startBtn.disabled = false;\n      document.removeEventListener('keypress', this.handleKeypress);\n      document.removeEventListener('keydown', this.handleBackspace);\n      var title = document.createElement('h1');\n      title.textContent = 'Game over!';\n      modal.insertAdjacentElement('beforeend', title);\n      var message = this.createEndGameMessage();\n      modal.insertAdjacentElement('beforeend', message);\n      modal.classList.add('modal--active');\n      blackout.classList.add('blackout--active');\n      document.body.classList.add('body--prevent-scroll');\n      blackout.addEventListener('click', this.hideBlackout);\n    }\n  }, {\n    key: \"createEndGameMessage\",\n    value: function createEndGameMessage() {\n      var parsedTime = Game.parseTime(this.time);\n      var successMessage = \"Congrats! You have typed the text at the speed \".concat(this.speed, \"\\n    CPM in \").concat(parsedTime, \", having committed \").concat(this.mistakes.total, \" mistakes.\");\n      var unsuccsessMessage = \"You commited more than \".concat(this.allowedMistakesNum, \" allowed mistakes.\\n    You have typed the text at the speed \").concat(this.speed, \" CPM in \").concat(parsedTime, \".\");\n      var description = document.createElement('p');\n      if (this.gameStatus === 'failed') description.textContent = unsuccsessMessage;else description.textContent = successMessage;\n      return description;\n    }\n  }, {\n    key: \"hideBlackout\",\n    value: function hideBlackout() {\n      var _this$elements3 = this.elements,\n          blackout = _this$elements3.blackout,\n          modal = _this$elements3.modal;\n      blackout.classList.remove('blackout--active');\n      modal.classList.remove('modal--active');\n      modal.innerHTML = '';\n      document.body.classList.remove('body--prevent-scroll');\n      blackout.removeEventListener('click', this.hideBlackout);\n    }\n  }, {\n    key: \"setMistakesDisplaying\",\n    value: function setMistakesDisplaying() {\n      var mistakes = this.elements.mistakes;\n      var wrapper = mistakes.parentNode;\n\n      if (this.mode === 'exact') {\n        wrapper.innerHTML = \"Mistakes: <span id=\\\"mistakes\\\">\".concat(this.mistakes.total, \"</span>/\").concat(this.allowedMistakesNum);\n      } else wrapper.innerHTML = \"Mistakes: <span id=\\\"mistakes\\\">\".concat(this.mistakes.total, \"</span>\");\n\n      this.elements.mistakes = document.querySelector('#mistakes');\n    }\n  }], [{\n    key: \"isCorrect\",\n    value: function isCorrect(enteredChar, charToCompare) {\n      if (enteredChar === charToCompare || Game.isSpace(enteredChar, charToCompare)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isMistake\",\n    value: function isMistake(enteredChar, charToCompare) {\n      if (enteredChar !== charToCompare && !Game.isSpace(enteredChar, charToCompare)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isSpace\",\n    value: function isSpace(enteredChar, charToCompare) {\n      if (enteredChar === \" \" && charToCompare === \"\\xA0\") return true;\n      return false;\n    }\n  }, {\n    key: \"parseTime\",\n    value: function parseTime(time) {\n      var addZero = function addZero(value) {\n        return value < 10 ? \"0\".concat(value) : value;\n      };\n\n      var seconds = addZero(Math.floor(time / 1000) % 60);\n      var minutes = addZero(Math.floor(time / 60000) % 60);\n      return \"\".concat(minutes, \":\").concat(seconds);\n    }\n  }]);\n\n  return Game;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Game);\n\n//# sourceURL=webpack://touch-typing/./src/js/game.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/style.scss */ \"./src/styles/style.scss\");\n/* harmony import */ var _facade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./facade */ \"./src/js/facade.js\");\n\n\n\n//# sourceURL=webpack://touch-typing/./src/js/index.js?");

/***/ }),

/***/ "./src/js/keyboard.js":
/*!****************************!*\
  !*** ./src/js/keyboard.js ***!
  \****************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Keyboard = /*#__PURE__*/function () {\n  function Keyboard(lang) {\n    _classCallCheck(this, Keyboard);\n\n    this.lang = lang;\n    this.elements = {\n      keyboardField: document.querySelector('#keyboard')\n    };\n    this.data = {\n      HTMLCodes: {\n        backspace: \"\\u2190\",\n        capsLock: \"\\u2191\",\n        tab: \"\\u2190\"\n      },\n      keyCodes: ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Backslash', 'ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ShiftRight', 'Space'],\n      englishLayout: ['`', {\n        \"default\": '1',\n        sup: '!'\n      }, {\n        \"default\": '2',\n        sup: '\"'\n      }, {\n        \"default\": '3',\n        sup: '£'\n      }, {\n        \"default\": '4',\n        sup: '$'\n      }, {\n        \"default\": '5',\n        sup: '%'\n      }, {\n        \"default\": '6',\n        sup: '^'\n      }, {\n        \"default\": '7',\n        sup: '?'\n      }, {\n        \"default\": '8',\n        sup: '*'\n      }, {\n        \"default\": '9',\n        sup: '('\n      }, {\n        \"default\": '0',\n        sup: ')'\n      }, {\n        \"default\": '-',\n        sup: '_'\n      }, {\n        \"default\": '=',\n        sup: '+'\n      }, 'backspace', 'tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', 'capsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', {\n        \"default\": ';',\n        sup: ':'\n      }, '\\'', '#', 'shiftL', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', 'shiftR', 'space'],\n      russianLayout: ['ё', {\n        \"default\": '1',\n        sup: '!'\n      }, {\n        \"default\": '2',\n        sup: '\"'\n      }, {\n        \"default\": '3',\n        sup: '№'\n      }, {\n        \"default\": '4',\n        sup: ';'\n      }, {\n        \"default\": '5',\n        sup: '%'\n      }, {\n        \"default\": '6',\n        sup: ':'\n      }, {\n        \"default\": '7',\n        sup: '?'\n      }, {\n        \"default\": '8',\n        sup: '*'\n      }, {\n        \"default\": '9',\n        sup: '('\n      }, {\n        \"default\": '0',\n        sup: ')'\n      }, {\n        \"default\": '-',\n        sup: '_'\n      }, {\n        \"default\": '=',\n        sup: '+'\n      }, 'backspace', 'tab', 'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', 'capsLock', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', '\\\\', 'shiftL', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', {\n        \"default\": '.',\n        sup: ','\n      }, 'shiftR', 'space']\n    };\n  }\n\n  _createClass(Keyboard, [{\n    key: \"init\",\n    value: function init() {\n      var keys = document.querySelectorAll('.keyboard__key'); // refactor\n\n      if (keys.length !== 0) {\n        this.elements.keyboardField.innerHTML = '';\n      }\n\n      this.generateKeyboard();\n    }\n  }, {\n    key: \"generateKeyboard\",\n    value: function generateKeyboard() {\n      var _this = this;\n\n      var fragment = document.createDocumentFragment();\n      var keys = this.lang === 'en' ? this.data.englishLayout : this.data.russianLayout;\n      var marginElements = this.lang === 'en' ? ['backspace', ']', '#', 'ShiftR'] : ['backspace', 'ъ', '\\\\', 'shiftR'];\n\n      var isMargin = function isMargin(el) {\n        return marginElements.indexOf(el) !== -1;\n      };\n\n      keys.forEach(function (_char) {\n        var key = document.createElement('div');\n        key.classList.add('keyboard__key');\n        var characterWrapper = document.createElement('span');\n        characterWrapper.classList.add('keyboard__key__char');\n\n        switch (_char) {\n          case 'backspace':\n            characterWrapper.textContent = _this.data.HTMLCodes.backspace;\n            key.style.width = '9%';\n            key.dataset.type = 'backspace';\n            break;\n\n          case 'tab':\n            characterWrapper.textContent = _this.data.HTMLCodes.tab;\n            key.style.width = '9%';\n            key.dataset.type = 'tab';\n            break;\n\n          case 'capsLock':\n            characterWrapper.textContent = _this.data.HTMLCodes.capsLock;\n            key.style.width = '10%';\n            key.dataset.type = 'capsLock';\n            break;\n\n          case 'shiftL':\n            characterWrapper.textContent = \"\\u2191\";\n            key.style.width = '12%';\n            key.dataset.type = 'shiftL';\n            break;\n\n          case 'shiftR':\n            characterWrapper.textContent = \"\\u2191\";\n            key.dataset.type = 'shiftR';\n            key.style.width = '12%';\n            break;\n\n          case 'space':\n            characterWrapper.textContent = ' ';\n            key.classList.add('keyboard__key--extrawide');\n            key.dataset.type = 'space';\n            break;\n\n          default:\n            if (_typeof(_char) === 'object') {\n              characterWrapper.textContent = _char[\"default\"].toLowerCase();\n              key.dataset.type = _char[\"default\"].toLowerCase();\n              key.innerHTML = \"<div class=\\\"keyboard__key__super\\\">\".concat(_char.sup, \"</div>\");\n            } else {\n              characterWrapper.textContent = _char.toLowerCase();\n              key.dataset.type = _char.toLowerCase();\n            }\n\n            break;\n        }\n\n        var index = keys.indexOf(_char);\n        key.dataset.code = _this.data.keyCodes[index];\n        key.appendChild(characterWrapper);\n        Keyboard.colorKey(key);\n        fragment.appendChild(key);\n        if (isMargin(_char)) fragment.appendChild(document.createElement('br'));\n      });\n      this.elements.keyboardField.appendChild(fragment);\n      this.elements.keyboardKeys = document.querySelectorAll('.keyboard__key');\n    }\n  }], [{\n    key: \"colorKey\",\n    value: function colorKey(key) {\n      var fingerZones = {\n        mericularFingers: {\n          values: ['`', '1', '2', 'tab', 'capsLock', 'shiftL', 'shiftR', 'q', 'й', 'a', 'ф', 'я', 'z', 'з', 'p', '0', '-', '=', 'х', 'ъ', '[', ']', '\\'', '\\\\', '/', 'ё', ';', 'backspace', '#', 'ж', 'э'],\n          className: 'keyboard__key--blue'\n        },\n        ringFingers: {\n          values: ['w', 's', 'x', 'o', 'l', '.', '9', '3', 'ц', 'ы', 'ч', 'щ', 'д', 'ю'],\n          className: 'keyboard__key--green'\n        },\n        middleFingers: {\n          values: ['e', 'd', 'c', '4', ',', '8', 'i', 'k', 'у', 'в', 'с', 'б', 'ш', 'л'],\n          className: 'keyboard__key--rose'\n        },\n        leftPointerFinger: {\n          values: ['5', '6', 'r', 'f', 'v', 't', 'g', 'b', 'к', 'а', 'м', 'е', 'п', 'и'],\n          className: 'keyboard__key--orange'\n        },\n        rightPointerFinger: {\n          values: ['7', 'y', 'h', 'n', 'u', 'j', 'm', 'н', 'р', 'т', 'г', 'о', 'ь'],\n          className: 'keyboard__key--yellow'\n        },\n        thumbFinger: {\n          values: ['space'],\n          className: 'keyboard__key--gray'\n        }\n      };\n      var keyValue = key.dataset.type;\n      var keyGroups = Object.values(fingerZones);\n\n      for (var _i = 0, _keyGroups = keyGroups; _i < _keyGroups.length; _i++) {\n        var group = _keyGroups[_i];\n        var values = group.values,\n            className = group.className;\n        if (values.includes(keyValue)) key.classList.add(className);\n      }\n    }\n  }, {\n    key: \"highlightKey\",\n    value: function highlightKey(character) {\n      var keys = document.querySelectorAll('.keyboard__key__char');\n      var superChars = document.querySelectorAll('.keyboard__key__super');\n      var keyToPress = Array.from(keys).find(function (keyElem) {\n        return keyElem.textContent === character.toLowerCase();\n      }) || Array.from(superChars).find(function (superChar) {\n        return superChar.textContent === character;\n      });\n      if (keyToPress === undefined) return;\n      keyToPress.parentNode.classList.add('keyboard__key--next');\n    }\n  }, {\n    key: \"unhighlightKey\",\n    value: function unhighlightKey() {\n      var pressedKey = document.querySelector('.keyboard__key--next');\n      if (pressedKey === null) return;\n      pressedKey.classList.remove('keyboard__key--next');\n    }\n  }]);\n\n  return Keyboard;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Keyboard);\n\n//# sourceURL=webpack://touch-typing/./src/js/keyboard.js?");

/***/ }),

/***/ "./src/js/text-data.js":
/*!*****************************!*\
  !*** ./src/js/text-data.js ***!
  \*****************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Generator = /*#__PURE__*/function () {\n  function Generator(lang) {\n    _classCallCheck(this, Generator);\n\n    this.lang = lang;\n    this.elements = {\n      textField: document.querySelector('#text')\n    };\n  }\n\n  _createClass(Generator, [{\n    key: \"pullText\",\n    value: function pullText() {\n      var _this = this;\n\n      var url = this.lang === 'en' ? 'https://litipsum.com/api/1/json' : 'https://fish-text.ru/get?&type=sentence&number=2';\n      var textField = this.elements.textField;\n      fetch(url).then(function (data) {\n        return data.json();\n      }).then(function (obj) {\n        textField.innerHTML = '';\n\n        if (_this.lang === 'en') {\n          var totalText = Generator.parseText(obj.text);\n\n          if (totalText.length < 50) {\n            _this.pullText();\n          } else _this.formText(Generator.parseText(obj.text));\n        } else _this.formText(Generator.replacer('Привет всем'));\n      })[\"catch\"](function (e) {\n        textField.textContent = 'Oops! Something went wrong:( Retry later';\n        throw new Error('Error in asynchronous function:', e);\n      });\n    }\n  }, {\n    key: \"formText\",\n    value: function formText(text) {\n      var textField = this.elements.textField;\n      var splittedText = text.split(\"\\xA0\");\n      splittedText.forEach(function (word, wordIndex) {\n        var wordElem = document.createElement('div');\n        wordElem.id = \"word\".concat(wordIndex);\n\n        var characters = _toConsumableArray(word);\n\n        if (wordIndex !== splittedText.length - 1) characters.push(\"\\xA0\");\n        characters.forEach(function (_char) {\n          var charWrapper = document.createElement('span');\n          charWrapper.innerText = _char;\n          charWrapper.classList.add('word__char');\n          wordElem.insertAdjacentElement('beforeend', charWrapper);\n        });\n        wordElem.classList.add('word');\n        textField.insertAdjacentElement('beforeend', wordElem);\n      });\n    }\n  }], [{\n    key: \"parseText\",\n    value: function parseText(textArray) {\n      var textString = textArray.join('');\n      var correctText = this.replacer(textString);\n      return Generator.formSentences(correctText.split(\"\\xA0\"));\n    }\n  }, {\n    key: \"replacer\",\n    value: function replacer(str) {\n      var symbolsToReplace = {\n        '--': ' - ',\n        '  ': ' ',\n        '“': '\"',\n        '”': '\"',\n        '’': '\\'',\n        // eslint-disable-next-line quote-props\n        'ё': 'е',\n        ' ': \"\\xA0\"\n      };\n      var correctStr = str;\n      var pairs = Object.entries(symbolsToReplace);\n      pairs.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            mistaked = _ref2[0],\n            correct = _ref2[1];\n\n        while (correctStr.includes(mistaked)) {\n          correctStr = correctStr.replace(mistaked, correct);\n        }\n      });\n      return correctStr;\n    }\n  }, {\n    key: \"formSentences\",\n    value: function formSentences(text) {\n      var hasDelimeters = function hasDelimeters(word, delimters) {\n        return word.some(function (_char2) {\n          return delimters.includes(_char2);\n        });\n      };\n\n      var exclude = /([A-Z]|St|Dr|Mrs?)\\./;\n      var sentence = '';\n      var sentenceCounter = 0;\n      var result = [];\n      text.forEach(function (word) {\n        var sentencesDelimeters = ['.', '!', ';', '?'];\n        if (sentenceCounter >= 3) return;\n\n        if (hasDelimeters(_toConsumableArray(word), sentencesDelimeters)) {\n          if (exclude.test(word)) sentence += \"\".concat(word, \"\\xA0\");else {\n            sentence += \"\".concat(word, \"\\xA0\");\n            result.push(sentence);\n            sentenceCounter += 1;\n            sentence = '';\n          }\n        } else sentence += \"\".concat(word, \"\\xA0\");\n      });\n      var totalText = result.join('').trim();\n      if (!Generator.areQuotesBalanced(totalText)) totalText += '\"';\n      return totalText;\n    }\n  }, {\n    key: \"areQuotesBalanced\",\n    value: function areQuotesBalanced(str) {\n      var quotesNum = _toConsumableArray(str).reduce(function (acc, _char3) {\n        return _char3 === '\"' ? acc += 1 : acc;\n      }, 0);\n\n      return quotesNum % 2 === 0;\n    }\n  }]);\n\n  return Generator;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Generator);\n\n//# sourceURL=webpack://touch-typing/./src/js/text-data.js?");

/***/ }),

/***/ "./src/styles/style.scss":
/*!*******************************!*\
  !*** ./src/styles/style.scss ***!
  \*******************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://touch-typing/./src/styles/style.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/js/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;